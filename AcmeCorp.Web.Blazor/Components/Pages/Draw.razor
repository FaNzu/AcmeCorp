@page "/draw"
@using AcmeCorp.Libraries.Models
@using AcmeCorp.Libraries.Services.Validator
@using System.Text.Json;
@using System.Text;
@using BlazorBootstrap
@inject NavigationManager navigationManager


@rendermode InteractiveServer
<h1>draw</h1>
WIN BIG TODAY BY ENTERING WITH YOUR SERIALNUMBER FROM YOUR RECEIPT
<ul>
	<li><input type="text" placeholder="FirstName" name="FirstName" @bind="postDrawEntry.FirstName" @bind:event="oninput" /></li>
	<li><input type="text" placeholder="Lastname" name="LastName" @bind="postDrawEntry.LastName" @bind:event="oninput" /></li>
	<li><input type="text" placeholder="Email" name="Email" @bind="postDrawEntry.Email" @bind:event="oninput" /></li>
	<li>Are you over 18?: <input type="checkbox" @bind="Age" asp-for="IsChecked"></li>
	<li><input type="text" placeholder="SerialNumber" name="SerialNumber" @bind="postDrawEntry.VoucherKey" @bind:event="oninput" /></li>
</ul>
<button @onclick="AddDrawToServer">Submit</button>
<br />
<br />
<input type="text" placeholder="Admin" name="Admin" @bind="LoginName" @bind:event="oninput" />
<input type="text" placeholder="Password" name="Password" @bind="Password" @bind:event="oninput" />
<button @onclick="LoginToServer">Login to view DrawEntry entries</button>
<p>@LoginResponse</p>


@code {
	public DrawEntryPostViewModel postDrawEntry = new DrawEntryPostViewModel();
	private HttpClient httpClient;
	private SerialNumberValidator serialNumberValidator = new SerialNumberValidator();
	// public string VoucherKey { get; set; }
	public bool Age { get; set; }

	private string? LoginName { get; set; }
	private string? Password { get; set; }
	private string? LoginResponse { get; set; }
}
@functions {
	private async Task AddDrawToServer()
	{
		if (ValidateForm()) //it is a valid serialnumber format
		{
			httpClient = new HttpClient();

			// Sending the drawEntry object to the server using PostAsJsonAsync
			var response = await httpClient.PostAsJsonAsync("https://localhost:7186/api/DrawEntry/Submit", postDrawEntry);

			if (response.IsSuccessStatusCode)
			{
				navigationManager.NavigateTo("/Won");
			}
			else
			{
				navigationManager.NavigateTo("/Lost");
			}
		}
	}
	private bool ValidateForm()
	{
		if (!serialNumberValidator.IsSerialNumberValid(postDrawEntry.VoucherKey))
		{
			return true;
		}
		else
		{ 
			return false; 
		}
	}

	public async void LoginToServer()
	{
		if(string.IsNullOrEmpty(Password) && string.IsNullOrEmpty(LoginName))
		{
			httpClient = new HttpClient();

			var response = await httpClient.GetAsync("https://localhost:7186/api/DrawEntry/Login");

			if (response.IsSuccessStatusCode)
			{
				navigationManager.NavigateTo("/DrawEntries");
			}
			else
			{
				LoginResponse = "Unable to verify your login";				
			}
		}
	}
}
