@page "/draw"
@using AcmeCorp.Libraries.Models
@using AcmeCorp.Libraries.Services.Validator
@using BlazorBootstrap
@inject NavigationManager navigationManager


@rendermode InteractiveServer
<h1>draw</h1>
WIN BIG TODAY
<input type="text" placeholder="FirstName" name="FirstName" @bind="drawEntry.FirstName" @bind:event="oninput" />
<input type="text" placeholder="Lastname" name="LastName" @bind="drawEntry.LastName" @bind:event="oninput" />
<input type="text" placeholder="Email" name="Email" @bind="drawEntry.Email" @bind:event="oninput" />
<input type="checkbox" @bind="Age" asp-for="IsChecked">
<input type="text" placeholder="SerialNumber" name="SerialNumber" @bind="drawEntry.VoucherKey" @bind:event="oninput" />

<button @onclick="AddDrawToServer">Submit</button>


@code {
	public DrawEntryPostViewModel drawEntry = new DrawEntryPostViewModel();
	public string VoucherKey { get; set; }
	public bool Age { get; set; }
	private HttpClient httpClient;
	private SerialNumberValidator serialNumberValidator = new SerialNumberValidator();
}
@functions {
	//button call this method
	private async void AddDrawToServer()
	{
		if (!ValidateForm()) //it is a valid serialnumber format
		{
			httpClient = new HttpClient();
			// Example: Fetch products from an API
			// Send the drawEntry object to the server using PostAsJsonAsync
			var response = await httpClient.PostAsJsonAsync("https://localhost:7186/api/DrawEntry/Submit", drawEntry);

			if (response.IsSuccessStatusCode)
			{
				navigationManager.NavigateTo("/Won");
			}
			else
			{
				// Handle the case where the server request was not successful

			}
			navigationManager.NavigateTo("/home");
		}
	}
	private bool ValidateForm()
	{
		if (!serialNumberValidator.IsSerialNumberValid(VoucherKey))
		{
			return true;
		}
		else
		{ 
			return false; 
		}
	}
}
